# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
# export DEFAULT_USER="naronA"
# Set name of the theme to load.

# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="agnoster"
#ZSH_THEME="robbyrussell"
ZSH_THEME="dracula"
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# alias mvim="~/.vim/mvim.sh"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to disable command auto-correction.
# DISABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true" 
# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
#export LANG=ja_JP.UTF-8
#export LANGUAGE=ja
#export LC_CTYPE=ja_JP.UTF-8
#export LC_ALL=ja_JP.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export PYENV_ROOT=$HOME/.pyenv
export PHPENV_ROOT=$HOME/.phpenv
export PATH=$PYENV_ROOT/shims:$PATH
export PATH=$HOME/.rbenv/bin:$PATH
export PATH=$PYENV_ROOT/bin:$PATH
export PATH=$HOME/.phpenv/bin:$PATH
export PATH=$HOME/.phpenv/shims:$PATH
export PATH=$HOME/.ndenv/bin:$PATH
export PATH=$HOME/.ndenv/shims:$PATH
export PATH=$HOME/.jenv/bin:$PATH
export PATH=$HOME/.jenv/shims:$PATH
export PATH=$HOME/.composer/vendor/bin:$PATH
export GTAGSLABEL=pygments
export TERM=xterm-256color
if [ "$TMUX" != "" ]; then
    export TERM="screen-256color"
fi
export EDITOR="nvim"
export SHELL=/bin/zsh

pip3_upgrade () {
    pip3 install --upgrade pip && pip3 list --outdated --format columns | awk 'NR>2{print $1}' | xargs pip3 install --upgrade
}

pip2_upgrade () {
    pip2 install --upgrade pip && pip2 list --outdated --format columns | awk 'NR>2{print $1}' | xargs pip2 install --upgrade
}

alias build-neovim='git pull && make clean && make CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/neovim" CMAKE_BUILD_TYPE=Release && make install'
alias neovim='~/neovim/bin/nvim'
alias tmux-reload='tmux source-file ~/.tmux.conf'
alias avenv='source ./env/bin/activate'
alias dvenv='deactivate'

docker_rmi_none () {
    docker images | grep \<none\> | awk "{print $3}" | xargs docker rmi
}

alias docker-rm-exited='docker -aq | xargs docker rm'

if [ "$(uname)" = "Darwin" ]; then
    # Mac OSX
    # export PKG_CONFIG_PATH=/usr/local/Cellar/libffi/3.0.13/lib/pkgconfig
    # export PATH="/usr/local/wine/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin"
    export PATH="/usr/local/sbin:$PATH"
    # alias brew="PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin brew"
elif uname -a | grep -sq "Ubuntu"; then
    # Ubuntu
    #export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
    export VTE_VERSION="100" 
    export PATH=$HOME/bin:$PATH
elif uname -a | grep -sq "Microsoft"; then
    # Windows Subsystem for Linux
    LS_COLORS=$LS_COLORS:'di=0;36:ow=0;36' ; export LS_COLORS
    zstyle ':completion:*' list-colors 'di=36' 'ow=36'
    export PATH=$HOME/bin:$PATH
    
elif uname -a | grep -sq "Linux"; then
    export PATH=$HOME/bin:$PATH
fi

if which rbenv > /dev/null; then
    eval "$(rbenv init -)"
fi

if which ndenv > /dev/null; then
    eval "$(ndenv init -)"
fi

if which pyenv > /dev/null; then
    eval "$(pyenv init -)"
fi

if which phpenv > /dev/null; then
    eval "$(phpenv init -)"
    CURRENT_COMPOSER_HOME="$HOME/.phpenv/versions/$(phpenv version | awk '{print($1)}')/composer"
    export COMPOSER_HOME="$CURRENT_COMPOSER_HOME"
    #"HOME/.phpenv/versions/7.1.13/composer"
fi

if which jenv > /dev/null; then
    eval "$(jenv init -)"
fi


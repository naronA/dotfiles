#!/bin/zsh
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
# export DEFAULT_USER="naronA"

skip_global_compinit=1

ZSH_THEME="dracula"
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# alias mvim="~/.vim/mvim.sh"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=7

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
#

plugins=(
    git
    fzf-zsh
    zsh-autosuggestions
)
bindkey '^[' autosuggest-accept

. "$HOME/.oh-my-zsh/oh-my-zsh.sh"

# User configuration
# export MANPATH="/usr/local/man:$MANPATH"

#export LANG=ja_JP.UTF-8
#export LANGUAGE=ja
#export LC_CTYPE=ja_JP.UTF-8
#export LC_ALL=ja_JP.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
export EDITOR="nvim"
export SHELL=/bin/zsh
export PYENV_ROOT="$HOME/.anyenv/envs/pyenv"
export PHPENV_ROOT="$HOME/.anyenv/envs/phpenv"
export GTAGSLABEL=pygments
export GOPATH="$HOME/go"
export GOBIN="$HOME/go/bin"
export TERM=xterm-256color
if [ "$TMUX" != "" ]; then
  export TERM="screen-256color"
fi
if uname -a | grep -sq "Ubuntu"; then
    LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    # PATH="$HOME/.linuxbrew/bin:$HOME/.linuxbrew/sbin:$PATH"
    # PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
    PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}
fi

PATH="$PATH:$GOBIN"
PATH="$HOME/.anyenv/bin:$PATH"
PATH="$HOME/.local/bin:$PATH"
PATH="$HOME/.cargo/bin:$PATH"
# PATH="/usr/local/opt/sbt@0.13/bin:$PATH"

export GOOGLE_APPLICATION_CREDENTIALS="$HOME/.gcp.json"

pip3_upgrade () {
  pip3 install --upgrade pip && pip3 list --outdated --format columns | awk 'NR>2{print $1}' | xargs pip3 install --upgrade
}

pip2_upgrade () {
  pip2 install --upgrade pip && pip2 list --outdated --format columns | awk 'NR>2{print $1}' | xargs pip2 install --upgrade
}

pipenv_dev () {
  pipenv install --dev neovim ipython flake8 autopep8 pep8 jedi pylint pyflakes isort
}

docker_rmi_none () {
  docker images | grep \<none\> | awk "{print $3}" | xargs docker rmi
}

# alias build-neovim='make clean && make CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/neovim" CMAKE_BUILD_TYPE=Release && make install'
# alias neovim='~/neovim/bin/nvim'
alias build-neovim='make clean && make CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/.cache/nvim-cache/usr/local" CMAKE_BUILD_TYPE=RelWithDebInfo && sudo make install && sudo cp =$HOME/.cache/nvim-cache/usr/local/bin/nvim /usr/local/bin/neovim'
alias tmux-reload='tmux source-file ~/.tmux.conf'
alias php-parse-stubs='composer run-script --working-dir="./vendor/felixfbecker/language-server" parse-stubs'
alias docker-rm-exited='docker -aq | xargs docker rm'
alias glog='git log --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative'
alias glogalga='log --graph --all --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative'
alias dus='du --max-depth=1 -h | sort -nr'

npm_freeze() {
  npm list -g --depth=0 | tail +2 | awk '{ print $2 }' | sed -e 's/\@[0-9].*$//g' | tr '\n' ' '
}

if [ "$(uname)" = "Darwin" ]; then
    # Mac OSX
    # PATH="/usr/local/sbin:$PATH"
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
elif uname -a | grep -sq "Ubuntu"; then
    # Ubuntu
    #export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
    export VTE_VERSION="100"
    PATH=$HOME/bin:$PATH
elif uname -a | grep -sq "Linux"; then
    PATH=$HOME/bin:$PATH
fi

if command -v anyenv > /dev/null; then
    eval "$(anyenv init - --no-rehash)"
fi

if command -v hub > /dev/null; then
    eval "$(hub alias -s)"
fi

if command -v direnv > /dev/null; then
    eval "$(direnv hook zsh)"
fi

export PATH=$PATH
# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f "$HOME/.npm/_npx/26788/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh" ]] && . "$HOME/.npm/_npx/26788/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh"
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f "$HOME/.npm/_npx/26788/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh" ]] && . "$HOME/.npm/_npx/26788/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh"

[[ -f "$HOME/.fzf.zsh" ]] && . "$HOME/.fzf.zsh"

if [ ! -e "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions"
fi

export LSCOLORS=gxfxxxxxcxxxxxxxxxgxgx
export LS_COLORS='di=01;36:ln=01;35:ex=01;32'
zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'ex=32'

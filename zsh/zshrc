#!/bin/zsh

set bell-style none
skip_global_compinit=1
setopt no_beep
export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=10000
export SAVEHIST=100000
setopt hist_ignore_dups

[ "$TMUX" != "" ] && export TERM="screen-256color"
export MANPATH="/usr/local/man:$MANPATH"

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export ARCHFLAGS="-arch x86_64"

export EDITOR="vim"
export SHELL=/bin/zsh
export ANYENV_ROOT="$HOME/.anyenv"
export XDG_CACHE_HOME="$HOME/.cache"
export PYENV_ROOT="$HOME/.anyenv/envs/pyenv"
export PHPENV_ROOT="$HOME/.anyenv/envs/phpenv"
export GTAGSLABEL=pygments
export GOROOT="$HOME/go/go1.13.7"
export GOBIN="$GOROOT/bin"
export GO111MODULE=on
export TERM=xterm-256color
export PIPENV_VENV_IN_PROJECT=true
export FZF_DEFAULT_OPTS='--height 40% --border'
export GOOGLE_APPLICATION_CREDENTIALS="$HOME/.gcp.json"
export LSCOLORS=gxfxxxxxcxxxxxxxxxgxgx
export LS_COLORS='di=01;36:ln=01;35:ex=01;32'
zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'ex=32'

if uname -a | grep -sq "Ubuntu"; then
  export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
  PATH="$JAVA_HOME/bin:$PATH"
elif [ "$(uname)" = "Darwin" ]; then
  test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
elif uname -a | grep -sq "microsoft"; then
  PATH="/mnt/c/Windows/System32:$PATH"
fi

export PATH="$HOME/.anyenv/bin:$HOME/.local/bin:$HOME/.cargo/bin:$HOME/bin:$GOBIN:$PATH"

# ls, the common ones I use a lot shortened for rapid fire usage
alias ls='ls --color'
alias l='ls -lFh --color'     #size,show type,human readable
alias la='ls -lAFh --color'   #long list,show almost all,show type,human readable
alias lr='ls -tRFh --color'   #sorted by date,recursive,show type,human readable
alias lt='ls -ltFh --color'   #long list,sorted by date,show type,human readable
alias ll='ls -l --color'      #long list

alias zshrc='${=EDITOR} ~/.zshrc' # Quick access to the ~/.zshrc file
alias vimrc='${=EDITOR} ~/.vim/init.vim' # Quick access to the ~/.zshrc file

alias grep='grep --color'
alias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '

alias t='tail -f'

# Command line head / tail shortcuts
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep'
alias -g L="| less"
alias -g M="| most"
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NUL="> /dev/null 2>&1"
alias -g P="2>&1| pygmentize -l pytb"

alias dud='du -d 1 -h'
alias duf='du -sh *'
alias fd='find . -type d -name'
alias ff='find . -type f -name'

alias h='history'
alias hgrep="fc -El 0 | grep"
alias help='man'
alias p='ps -f'
alias sortnr='sort -n -r'
alias unexport='unset'

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

alias build-vim='make clean && make distclean  && ./configure  --prefix=/usr/local/ --with-features=huge --enable-multibyte --enable-gpm --enable-cscope --enable-perlinterp --enable-python3interp --with-python3-command=$(echo $HOME)/.anyenv/envs/pyenv/shims/python --enable-rubyinterp --enable-luainterp --enable-acl --enable-fontset --enable-xim --enable-terminal --enable-fail-if-missing --with-luajit --with-x && make && sudo make install'
alias build-nvim='sudo rm -rf .deps build && sudo make clean && sudo make CMAKE_BUILD_TYPE=Release && sudo make CMAKE_INSTALL_PREFIX=/usr/local install'
alias tmux-reload='tmux source-file ~/.tmux.conf'
alias php-parse-stubs='composer run-script --working-dir="./vendor/felixfbecker/language-server" parse-stubs'
alias glog='git log --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative'
alias glogalga='log --graph --all --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative'
alias dus='du --max-depth=1 -h | sort -nr'

# docker
alias docker-ps='docker ps -a'
alias docker-rm='docker stop $(docker ps -aq) && docker rm $(docker ps -aq)'
alias docker-prune='docker system prune --volumes'

# raspi
alias pi1='ssh ubuntu@172.16.27.10'
alias pi2='ssh ubuntu@172.16.27.11'
alias pi3='ssh ubuntu@172.16.27.12'

### FZF
if [ -f ~/.fzf.zsh ]; then
  source ~/.fzf.zsh
else
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install
fi

### ghq + fzf
alias github='gh-open $(repos)'

function ghq-fzf() {
  local src=$(ghq list | fzf )
  if [ -n "$src" ]; then
    BUFFER="cd $(ghq root)/$src"
    zle accept-line
  fi
  zle -R -c
}

[ -f "$(which hub)" ] && eval "$(hub alias -s)"
[ -f "$(which direnv)" ] && eval "$(direnv hook zsh)"

### anyenv ###
# [ -f ~/.anyenv/bin/anyenv ] && eval "$(anyenv init - --no-rehash)"
function cache-anyenv() {
    [[ -d $XDG_CACHE_HOME/anyenv ]] || mkdir -p $XDG_CACHE_HOME/anyenv
    anyenv init - --no-rehash > $XDG_CACHE_HOME/anyenv/init.zsh
}

if [[ -x $ANYENV_ROOT/bin/anyenv ]]; then
    [[ -f $XDG_CACHE_HOME/anyenv/init.zsh ]] || cache-anyenv
    source $XDG_CACHE_HOME/anyenv/init.zsh
fi

export ZINIT="$HOME/.zinit"
export ENHANCD_COMMAND=cdd

### zinit ###
#
if [[ ! -f $ZINIT/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing DHARMA Initiative Plugin Manager (zdharma/zinit)…%f"
    command mkdir -p "$ZINIT" && command chmod g-rwX "$ZINIT"
    command git clone https://github.com/zdharma/zinit "$ZINIT/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f" || \
        print -P "%F{160}▓▒░ The clone has failed.%f"
fi
source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit light zsh-users/zsh-autosuggestions
# zinit light zdharma/fast-syntax-highlighting
zinit light dracula/zsh
zinit light b4b4r07/enhancd

### Bind keys ###
zle -N ghq-fzf
bindkey '^G' ghq-fzf
bindkey '^[' autosuggest-accept

if [ ~/.zshrc -nt ~/.zshrc.zwc ]; then
  zcompile ~/.zshrc
fi

# call lexima#add_rule({'char': '<TAB>', 'at': '\%#)', 'leave': 1})
# call lexima#add_rule({'char': '<TAB>', 'at': '\%#"', 'leave': 1})
# call lexima#add_rule({'char': '<TAB>', 'at': "\%#'", 'leave': 1})
# call lexima#add_rule({'char': '<TAB>', 'at': '\%#]', 'leave': 1})
# call lexima#add_rule({'char': '<TAB>', 'at': '\%#}', 'leave': 1})

# call lexima#add_rule({"at" : '\%#',   "char" : '"', "input_after" : '"'})
# call lexima#add_rule({"at" : '\%#',   "char" : '"', "input" : '"', "syntax" : "String"})
# call lexima#add_rule({"at" : '"\%#"', "char" : '"', "input" : '<Right>'})
# call lexima#add_rule({"at" : '"\%#"', "char" : '"', "input" : '<Right>', "syntax" : "String"})
#
# call lexima#add_rule({"at" : "\%#",   "char" : "'", "input_after" : "'"})
# call lexima#add_rule({"at" : "\%#",   "char" : "'", "input" : "'", "syntax" : "String"})
# call lexima#add_rule({"at" : "'\%#'", "char" : "'", "input" : '<Right>'})
# call lexima#add_rule({"at" : "'\%#'", "char" : "'", "input" : '<Right>', "syntax" : "String"})

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
let g:NERDTreeLimitedSyntax = 1
let g:NERDTreeSyntaxEnabledExtensions = [
  \ 'bmp',
  \ 'c',
  \ 'coffee',
  \ 'cpp',
  \ 'css',
  \ 'erb',
  \ 'go',
  \ 'hs',
  \ 'html',
  \ 'java',
  \ 'jpg',
  \ 'js',
  \ 'json',
  \ 'jsx',
  \ 'less',
  \ 'lua',
  \ 'markdown',
  \ 'md',
  \ 'php',
  \ 'png',
  \ 'pl',
  \ 'py',
  \ 'rb',
  \ 'rs',
  \ 'scala',
  \ 'scss',
  \ 'sh',
  \ 'sql',
  \ 'vim',
  \ 'vue',
\]
'''

###############
### Jupyter ###
###############

[[plugins]]
repo = 'szymonmaszke/vimpyter'
on_ft = ['ipynb']
hook_add = '''
autocmd Filetype ipynb nmap <silent><C-s>b :VimpyterInsertPythonBlock<CR>
autocmd Filetype ipynb nmap <silent><C-s>j :VimpyterStartJupyter<CR>
autocmd Filetype ipynb nmap <silent><C-s>n :VimpyterStartNteract<CR>
'''



[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'
on_ft = ['markdown','mkd']

[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown','mkd']

[[plugins]]
repo = 'tyru/open-browser.vim'
on_ft = ['markdown','mkd']

[[plugins]]
repo = 'lambdalisue/vim-pyenv'
depends = ['jedi-vim']
on_source = ['jedi-vim']
on_ft = ['python', 'python3']
hook_post_source= '''
if jedi#init_python()
  function! s:jedi_auto_force_py_version() abort
    let major_version = pyenv#python#get_internal_major_version()
    call jedi#force_py_version(major_version)
  endfunction
  augroup vim-pyenv-custom-augroup
    autocmd! *
    autocmd User vim-pyenv-activate-post   call s:jedi_auto_force_py_version()
    autocmd User vim-pyenv-deactivate-post call s:jedi_auto_force_py_version()
  augroup END
endif
'''

[[plugins]]
repo = 'prettier/vim-prettier'
build = 'npm install'
on_ft = ['javascript', 'vue', 'typescript', 'css', 'less', 'scss']
hook_add = '''
let g:prettier#autoformat = 1
let g:prettier#quickfix_enabled = 0
let g:prettier#exec_cmd_async = 1
autocmd BufWritePre *.js,*.css,*.scss,*.less PrettierAsync
'''

[[plugins]]
repo = 'ternjs/tern_for_vim'
on_ft = ['javascript']
build = 'npm i -g tern'
hook_add = '''
function! s:js_keymap()
    nnoremap <buffer><silent> K :TernDoc<CR>
    nnoremap <buffer><silent> gd :TernDef<CR>
    nnoremap <buffer><silent> <F2> :TernRename<CR>
    nnoremap <buffer><silent> <C-h> :TernRefs<CR>
endfunction
autocmd FileType javascript :call s:js_keymap()
'''

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = ['javascript']
[[plugins]]
repo = 'mhartington/nvim-typescript'
build = 'bash install.sh'
on_ft = ['javascript', 'typescript']
hook_add = '''
let g:nvim_typescript#javascript_support = 1
let g:nvim_typescript#type_info_on_hold = 1
let g:nvim_typescript#max_completion_detail = 3
let g:nvim_typescript#default_signs =
      \ get(g:, 'nvim_typescript#default_signs', [
      \{
      \  'TSinformation': {
      \   'texthl': 'SpellBad',
      \   'signText': 'â€¢',
      \   'signTexthl': 'NeomakeInfoSign'
      \   }
      \},
      \{
      \  'TShint': {
      \   'texthl': 'SpellBad',
      \   'signText': '?',
      \   'signTexthl': 'NeomakeInfoSign'
      \   }
      \}
      \])
function! s:ts_keymap()
    nnoremap <buffer><silent> K :TSDoc<CR>
    nnoremap <buffer><silent> gd :TSDef<CR>
    nnoremap <buffer><silent> <F2> :TSRename<CR>
    nnoremap <buffer><silent> <C-h> :TSRefs<CR>
endfunction
autocmd FileType typescript :call s:ts_keymap()
'''

[[plugins]]
repo = 'beanworks/vim-phpfmt'
on_ft = ['php']
hook_add = '''
let g:phpfmt_standard = 'PSR2'
let g:phpfmt_autosave = 0
'''


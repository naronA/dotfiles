##################
### Neosnippet ###
##################
[[plugins]]
on_i = 1
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets']
on_i = 1
hook_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <expr><TAB>
 \ pumvisible() ? "\<C-n>" :
 \ neosnippet#expandable_or_jumpable() ?
 \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

imap <expr><CR>
\ (pumvisible() && neosnippet#expandable()) ? "\<Plug>(neosnippet_expand_or_jump)" : "\<CR>"


smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
"if has('conceal')
"  set conceallevel=2 concealcursor=niv
"endif
'''

##############
### Denite ###
##############
[[plugins]]
repo      = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_event = 'BufRead'
build = '''
curl https://sh.rustup.rs -sSf | sh
cargo install ripgrep
'''
hook_add = '''
nnoremap [denite] <Nop>
nmap <Leader> [denite]
" let ignore=&wildignore . ',.idea,.php_cs_cache,*.pyc,.git,.hg,.svn,node_modules,vendor,mock,laradock,dbsample,docs,public'

"############
"### Grep ###
"############
nnoremap <silent> [denite]p :<C-u>Denite
    \ -direction=topleft
    \ -auto-preview
    \ -vertical-preview
    \ -highlight-mode-insert=Search
    \ -cursor-wrap=true grep<CR>

"#########################
"### Current Directory ###
"#########################
nnoremap <silent> [denite]f :<C-u>Denite
    \ -direction=topleft
    \ -highlight-mode-insert=Search
    \ -cursor-wrap=true file_rec<CR>

"##################
"### References ###
"##################
nnoremap <silent> [denite]r :<C-u>Denite
    \ -direction=topleft
    \ -auto-preview
    \ -vertical-preview
    \ -auto-highlight
    \ -highlight-mode-insert=Search
    \ -cursor-wrap=true references<CR>


"##############
"### Buffer ###
"##############
nnoremap <silent> [denite]b :<C-u>Denite
    \ -direction=topleft
    \ -auto-preview
    \ -vertical-preview
    \ -cursor-wrap=true buffer<CR>

"################
"### Register ###
"################
nnoremap <silent> [denite]R :<C-u>Denite
    \ -direction=topleft
    \ -cursor-wrap=true
    \ -buffer-name=register register<CR>

"###########
"### MRU ###
"###########
nnoremap <silent> [denite]m :<C-u>Denite
    \ -direction=topleft
    \ -cursor-wrap=true file_mru<CR>

"################
"### Bookmark ###
"################
nnoremap <silent> [denite]c :<C-u>Denite
    \ -direction=topleft
    \ -cursor-wrap=true bookmark<CR>

"####################
"### Add Bookmark ###
"####################
nnoremap <silent> [denite]a :<C-u>DeniteBookmarkAdd<CR>

".git以下のディレクトリ検索
nnoremap <silent> [denite]k :<C-u>Denite
    \ -direction=topleft
    \ -cursor-wrap=true
    \ -path=`substitute(finddir('.git', './;'), '.git', '', 'g')`
    \ file_rec/git<CR>
'''
hook_post_source =
'''
call denite#custom#map('insert', '<C-N>', '<denite:move_to_next_line>', 'noremap')
call denite#custom#map('insert', '<C-P>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('insert', '<C-W>', '<denite:move_up_path>', 'noremap')

call denite#custom#var('file_rec/git', 'command', ['git', 'ls-files', '-co',    '--exclude-standard'])
call denite#custom#var('file_rec',     'command', ['rg',  '--files',  '--glob', '!.git'])

call denite#custom#var('grep', 'command', ['rg'])
call denite#custom#var('grep', 'default_opts', ['--vimgrep', '--no-heading'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', ['--regexp'])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])

call denite#custom#source('file',     'matchers', ['matcher_cpsm', 'matcher_fuzzy'])
call denite#custom#source('buffer',   'matchers', ['matcher_regexp'])
call denite#custom#source('file_mru', 'matchers', ['matcher_regexp'])
call denite#custom#alias('source', 'file_rec/git', 'file_rec')
'''

############
### 括弧 ###
############
[[plugins]]
repo = 'tpope/vim-surround'
on_i = 1

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1
hook_add = '''
let g:lexima_ctrlh_as_backspace = 1
'''
hook_post_source = '''
call lexima#add_rule({'char': '<TAB>', 'at': '\%#)', 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': '\%#"', 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': "\%#'", 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': '\%#]', 'leave': 1})
call lexima#add_rule({'char': '<TAB>', 'at': '\%#}', 'leave': 1})
'''

